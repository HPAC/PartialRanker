{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Applications in Root Cause Analysis : BPI"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Overview\n",
    "\n",
    "In this experiment, we demonstrate  an application of partial ranking in Business Process Intelligence.\n",
    "\n",
    "A business process can be viewed as a sequence of tasks that need to be performed to achieve a specific business objective. In large organizations, such processes are typically complex and hard to optimize, and enterprise tools are often used to monitor and improve such processes (an overview of such tools can be found in this [link](https://www.gartner.com/reviews/market/process-mining-platforms)). We now show how partial ranking methodologies can be helpful in improving the insights provided by such tools.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### The Data\n",
    "\n",
    "Let us consider the Purchase-to-Pay (P2P) business process, which involves the activities encountered while acquiring goods or services from external suppliers. For every purchase\n",
    "request, the sequence in which the activities are executed is captured by sophisticated Enterprise Resource Management systems like SAP. A particular sequence of activities is referred to\n",
    "as a process variant, and in large organizations, there are typically hundreds of process variants for a business process like P2P. We consider a P2P dataset from an SAP system of certain organization provided by a German data processing company - Celonis, during a hackathon event organized in collaboration with RWTH Aachen University in April 2022.\n",
    "\n",
    "**Access to the data**: \n",
    "\n",
    "The SAP P2P Hackathon 2022 dataset can be requested for access through [Celonis Academy](https://academy.celonis.com/). Once this dataset is available to you through the cloud service of Celonis, it can be downloaded by running the script ``examples/get_data_from_celonis.py`` after entering your credentials. Then, the CSV files ``examples/data/sap_p2p_events.csv`` and ``examples/data/sap_p2p_cases.csv`` would become available. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "df_events = pd.read_csv('data/sap_p2p_events.csv',sep=',')\n",
    "df_events = df_events.drop(columns=['Unnamed: 0'])\n",
    "\n",
    "df_case = pd.read_csv('data/sap_p2p_cases.csv',sep=',')\n",
    "df_case = df_case.drop(columns=['Unnamed: 0'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Understanding the data**:\n",
    "\n",
    "Every purchase request or case is uniquely identified by an ID indicated in the column ``case:concept:name``. In ``sap_p2p_cases.csv``, there is a record for each purchase request, which is associated with a specific sequence of activities or events (``case:variant``). The duration of every request in seconds is indicated in the column ``timestamp``."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>case:concept:name</th>\n",
       "      <th>case:variant</th>\n",
       "      <th>duration</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>800000000047700009</td>\n",
       "      <td>Create Purchase Requisition Item, Create Purch...</td>\n",
       "      <td>41760.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>800000000088700005</td>\n",
       "      <td>Create Purchase Requisition Item, Create Purch...</td>\n",
       "      <td>38880.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>800000000129700001</td>\n",
       "      <td>Create Purchase Requisition Item, Create Purch...</td>\n",
       "      <td>43200.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>800000000170600007</td>\n",
       "      <td>Create Purchase Order Item, Print and Send Pur...</td>\n",
       "      <td>28800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>800000000211600003</td>\n",
       "      <td>Create Purchase Requisition Item, Create Purch...</td>\n",
       "      <td>53280.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    case:concept:name                                       case:variant  \\\n",
       "0  800000000047700009  Create Purchase Requisition Item, Create Purch...   \n",
       "1  800000000088700005  Create Purchase Requisition Item, Create Purch...   \n",
       "2  800000000129700001  Create Purchase Requisition Item, Create Purch...   \n",
       "3  800000000170600007  Create Purchase Order Item, Print and Send Pur...   \n",
       "4  800000000211600003  Create Purchase Requisition Item, Create Purch...   \n",
       "\n",
       "   duration  \n",
       "0   41760.0  \n",
       "1   38880.0  \n",
       "2   43200.0  \n",
       "3   28800.0  \n",
       "4   53280.0  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_case.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Multiple cases can be mapped to a particular variant. The number of cases and the number of unique variants are shown below:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of cases: 279020\n",
      "Number of variants: 562\n"
     ]
    }
   ],
   "source": [
    "num_cases = df_case['case:concept:name'].unique().shape[0]\n",
    "num_variants = df_case['case:variant'].unique().shape[0]\n",
    "\n",
    "print(f'Number of cases: {num_cases}')\n",
    "print(f'Number of variants: {num_variants}')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Each variant is assigned a unique ID. We then identify the variants that were observed in more than 100 cases, and prepare the durations data in the following format:\n",
    "\n",
    "```json\n",
    "durations = {\n",
    "    0: [42032,76321,...],\n",
    "    1: [65434, 23432, ...],\n",
    "    ...\n",
    "}\n",
    "```\n",
    "\n",
    "The data is then visualized."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from partial_ranker import MeasurementsVisualizer\n",
    "\n",
    "df_case['variant_id'] = df_case.groupby(['case:variant']).ngroup()\n",
    "var_id_dict = dict(zip(df_case['case:variant'], df_case['variant_id']))\n",
    "ranking_inp = dict(df_case.groupby('variant_id')['duration'].apply(list))\n",
    "\n",
    "durations = {}\n",
    "for k,v in ranking_inp.items():\n",
    "    if len(v)>100:\n",
    "        durations[str(k)] = v\n",
    "        \n",
    "mv = MeasurementsVisualizer(durations)\n",
    "fig = mv.show_measurements_boxplots(scale=0.2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In the other file ``sap_p2p_events.csv``, there is a record for every event along with its associated timestamp. This data is rather redudant for our experiment, but will be required by the library ``pm4py`` that calculates the Directly Follows Graph later on."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>case:concept:name</th>\n",
       "      <th>concept:name</th>\n",
       "      <th>case:variant</th>\n",
       "      <th>timestamp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>800000000006800001</td>\n",
       "      <td>Create Purchase Requisition Item</td>\n",
       "      <td>Create Purchase Requisition Item, Create Purch...</td>\n",
       "      <td>2008-12-31 07:44:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>800000000006800001</td>\n",
       "      <td>Create Purchase Order Item</td>\n",
       "      <td>Create Purchase Requisition Item, Create Purch...</td>\n",
       "      <td>2009-01-02 07:44:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>800000000006800001</td>\n",
       "      <td>Print and Send Purchase Order</td>\n",
       "      <td>Create Purchase Requisition Item, Create Purch...</td>\n",
       "      <td>2009-01-05 07:44:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>800000000006800001</td>\n",
       "      <td>Receive Goods</td>\n",
       "      <td>Create Purchase Requisition Item, Create Purch...</td>\n",
       "      <td>2009-01-12 07:44:05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>800000000006800001</td>\n",
       "      <td>Scan Invoice</td>\n",
       "      <td>Create Purchase Requisition Item, Create Purch...</td>\n",
       "      <td>2009-01-20 07:44:05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    case:concept:name                      concept:name  \\\n",
       "0  800000000006800001  Create Purchase Requisition Item   \n",
       "1  800000000006800001        Create Purchase Order Item   \n",
       "2  800000000006800001     Print and Send Purchase Order   \n",
       "3  800000000006800001                     Receive Goods   \n",
       "4  800000000006800001                      Scan Invoice   \n",
       "\n",
       "                                        case:variant            timestamp  \n",
       "0  Create Purchase Requisition Item, Create Purch...  2008-12-31 07:44:05  \n",
       "1  Create Purchase Requisition Item, Create Purch...  2009-01-02 07:44:05  \n",
       "2  Create Purchase Requisition Item, Create Purch...  2009-01-05 07:44:05  \n",
       "3  Create Purchase Requisition Item, Create Purch...  2009-01-12 07:44:05  \n",
       "4  Create Purchase Requisition Item, Create Purch...  2009-01-20 07:44:05  "
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_events.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Partial Ranking of the Variants\n",
    "\n",
    "We first apply Methodology 2 (```partial_ranker.PartialRankerDFGReduced```) to rank the variants."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Reordering and visualizing the data again\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from partial_ranker import QuantileComparer\n",
    "from partial_ranker import PartialRankerDFGReduced\n",
    "\n",
    "comparer = QuantileComparer(durations)\n",
    "comparer.compute_quantiles(q_max=75, q_min=25,outliers=False)\n",
    "comparer.compare()\n",
    "pr_dfg_r = PartialRankerDFGReduced(comparer)\n",
    "pr_dfg_r.compute_ranks()\n",
    "\n",
    "h0 = pr_dfg_r.graph_H.get_separable_arrangement()\n",
    "\n",
    "print(\"Reordering and visualizing the data again\")\n",
    "mv = MeasurementsVisualizer(durations, h0)\n",
    "fig = mv.show_measurements_boxplots(scale=0.2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**The Ranks (Methodology 2)**\n",
    "\n",
    "We see that except the variants 535,297 and 406, all the other variants collapse into a single rank. This is not ideal to discriminate the variants. Therefore, we recalculate the ranks using Methodology 1 (``partial_ranker.PartialRankerDFG``)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rank 0: ['535']\n",
      "Rank 1: ['297', '406']\n",
      "Rank 2: ['548', '425', '126', '132', '142', '77', '214', '281', '330', '397', '452', '455', '503', '341', '524', '435', '308', '106', '198', '267', '363', '489', '143', '466', '48', '117', '456']\n"
     ]
    }
   ],
   "source": [
    "R = pr_dfg_r.get_ranks()\n",
    "for k,v in R.items():\n",
    "    print(f'Rank {k}: {v}')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**The Ranks (Methodology 1)**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rank 5: ['48', '117', '143', '456', '466']\n",
      "Rank 2: ['77', '126', '132', '142', '214', '281', '330', '397', '425', '452', '455', '503', '548']\n",
      "Rank 3: ['106', '308', '341', '435', '524']\n",
      "Rank 4: ['198', '267', '363', '489']\n",
      "Rank 1: ['297', '406']\n",
      "Rank 0: ['535']\n"
     ]
    }
   ],
   "source": [
    "from partial_ranker import PartialRankerDFG\n",
    "\n",
    "pr_dfg = PartialRankerDFG(comparer)\n",
    "pr_dfg.compute_ranks()\n",
    "\n",
    "R = pr_dfg.get_ranks()\n",
    "for k,v in R.items():\n",
    "    print(f'Rank {k}: {v}')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now the variants are classified into more ranks. The rank dependency graph is shown below: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n",
       " \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n",
       "<!-- Generated by graphviz version 2.43.0 (0)\n",
       " -->\n",
       "<!-- Title: %3 Pages: 1 -->\n",
       "<svg width=\"963pt\" height=\"404pt\"\n",
       " viewBox=\"0.00 0.00 962.60 404.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n",
       "<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 400)\">\n",
       "<title>%3</title>\n",
       "<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-400 958.6,-400 958.6,4 -4,4\"/>\n",
       "<!-- 48 -->\n",
       "<g id=\"node1\" class=\"node\">\n",
       "<title>48</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"554.6\" cy=\"-18\" rx=\"27\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"554.6\" y=\"-14.3\" font-family=\"Times,serif\" font-size=\"14.00\">48</text>\n",
       "</g>\n",
       "<!-- 77 -->\n",
       "<g id=\"node2\" class=\"node\">\n",
       "<title>77</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"927.6\" cy=\"-234\" rx=\"27\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"927.6\" y=\"-230.3\" font-family=\"Times,serif\" font-size=\"14.00\">77</text>\n",
       "</g>\n",
       "<!-- 106 -->\n",
       "<g id=\"node3\" class=\"node\">\n",
       "<title>106</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"703.6\" cy=\"-162\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"703.6\" y=\"-158.3\" font-family=\"Times,serif\" font-size=\"14.00\">106</text>\n",
       "</g>\n",
       "<!-- 117 -->\n",
       "<g id=\"node4\" class=\"node\">\n",
       "<title>117</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"628.6\" cy=\"-18\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"628.6\" y=\"-14.3\" font-family=\"Times,serif\" font-size=\"14.00\">117</text>\n",
       "</g>\n",
       "<!-- 126 -->\n",
       "<g id=\"node5\" class=\"node\">\n",
       "<title>126</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"778.6\" cy=\"-234\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"778.6\" y=\"-230.3\" font-family=\"Times,serif\" font-size=\"14.00\">126</text>\n",
       "</g>\n",
       "<!-- 126&#45;&gt;106 -->\n",
       "<g id=\"edge29\" class=\"edge\">\n",
       "<title>126&#45;&gt;106</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M763.06,-218.5C752.43,-208.58 738.16,-195.26 726.27,-184.16\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"728.56,-181.51 718.86,-177.25 723.78,-186.63 728.56,-181.51\"/>\n",
       "</g>\n",
       "<!-- 308 -->\n",
       "<g id=\"node14\" class=\"node\">\n",
       "<title>308</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"778.6\" cy=\"-162\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"778.6\" y=\"-158.3\" font-family=\"Times,serif\" font-size=\"14.00\">308</text>\n",
       "</g>\n",
       "<!-- 126&#45;&gt;308 -->\n",
       "<g id=\"edge30\" class=\"edge\">\n",
       "<title>126&#45;&gt;308</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M778.6,-215.7C778.6,-207.98 778.6,-198.71 778.6,-190.11\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"782.1,-190.1 778.6,-180.1 775.1,-190.1 782.1,-190.1\"/>\n",
       "</g>\n",
       "<!-- 132 -->\n",
       "<g id=\"node6\" class=\"node\">\n",
       "<title>132</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"853.6\" cy=\"-234\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"853.6\" y=\"-230.3\" font-family=\"Times,serif\" font-size=\"14.00\">132</text>\n",
       "</g>\n",
       "<!-- 132&#45;&gt;106 -->\n",
       "<g id=\"edge31\" class=\"edge\">\n",
       "<title>132&#45;&gt;106</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M831.14,-222.52C805.73,-210.66 764.16,-191.26 735.42,-177.85\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"736.75,-174.61 726.21,-173.55 733.79,-180.95 736.75,-174.61\"/>\n",
       "</g>\n",
       "<!-- 132&#45;&gt;308 -->\n",
       "<g id=\"edge32\" class=\"edge\">\n",
       "<title>132&#45;&gt;308</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M838.06,-218.5C827.43,-208.58 813.16,-195.26 801.27,-184.16\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"803.56,-181.51 793.86,-177.25 798.78,-186.63 803.56,-181.51\"/>\n",
       "</g>\n",
       "<!-- 142 -->\n",
       "<g id=\"node7\" class=\"node\">\n",
       "<title>142</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"703.6\" cy=\"-234\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"703.6\" y=\"-230.3\" font-family=\"Times,serif\" font-size=\"14.00\">142</text>\n",
       "</g>\n",
       "<!-- 142&#45;&gt;106 -->\n",
       "<g id=\"edge33\" class=\"edge\">\n",
       "<title>142&#45;&gt;106</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M703.6,-215.7C703.6,-207.98 703.6,-198.71 703.6,-190.11\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"707.1,-190.1 703.6,-180.1 700.1,-190.1 707.1,-190.1\"/>\n",
       "</g>\n",
       "<!-- 142&#45;&gt;308 -->\n",
       "<g id=\"edge34\" class=\"edge\">\n",
       "<title>142&#45;&gt;308</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M719.14,-218.5C729.77,-208.58 744.03,-195.26 755.92,-184.16\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"758.41,-186.63 763.33,-177.25 753.64,-181.51 758.41,-186.63\"/>\n",
       "</g>\n",
       "<!-- 143 -->\n",
       "<g id=\"node8\" class=\"node\">\n",
       "<title>143</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"480.6\" cy=\"-18\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"480.6\" y=\"-14.3\" font-family=\"Times,serif\" font-size=\"14.00\">143</text>\n",
       "</g>\n",
       "<!-- 198 -->\n",
       "<g id=\"node9\" class=\"node\">\n",
       "<title>198</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"478.6\" cy=\"-90\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"478.6\" y=\"-86.3\" font-family=\"Times,serif\" font-size=\"14.00\">198</text>\n",
       "</g>\n",
       "<!-- 198&#45;&gt;48 -->\n",
       "<g id=\"edge56\" class=\"edge\">\n",
       "<title>198&#45;&gt;48</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M494.34,-74.5C505.19,-64.51 519.76,-51.09 531.86,-39.94\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"534.4,-42.36 539.39,-33.01 529.66,-37.21 534.4,-42.36\"/>\n",
       "</g>\n",
       "<!-- 198&#45;&gt;117 -->\n",
       "<g id=\"edge57\" class=\"edge\">\n",
       "<title>198&#45;&gt;117</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M501.05,-78.52C526.46,-66.66 568.03,-47.26 596.77,-33.85\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"598.41,-36.95 605.99,-29.55 595.45,-30.61 598.41,-36.95\"/>\n",
       "</g>\n",
       "<!-- 198&#45;&gt;143 -->\n",
       "<g id=\"edge58\" class=\"edge\">\n",
       "<title>198&#45;&gt;143</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M479.09,-71.7C479.31,-63.98 479.58,-54.71 479.82,-46.11\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"483.32,-46.2 480.11,-36.1 476.32,-46 483.32,-46.2\"/>\n",
       "</g>\n",
       "<!-- 456 -->\n",
       "<g id=\"node24\" class=\"node\">\n",
       "<title>456</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"703.6\" cy=\"-18\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"703.6\" y=\"-14.3\" font-family=\"Times,serif\" font-size=\"14.00\">456</text>\n",
       "</g>\n",
       "<!-- 198&#45;&gt;456 -->\n",
       "<g id=\"edge59\" class=\"edge\">\n",
       "<title>198&#45;&gt;456</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M500.22,-78.21C505.19,-75.96 510.52,-73.75 515.6,-72 580.81,-49.49 601.38,-58.51 666.6,-36 668.5,-35.34 670.44,-34.62 672.38,-33.86\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"674.13,-36.92 681.98,-29.79 671.4,-30.47 674.13,-36.92\"/>\n",
       "</g>\n",
       "<!-- 466 -->\n",
       "<g id=\"node25\" class=\"node\">\n",
       "<title>466</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"405.6\" cy=\"-18\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"405.6\" y=\"-14.3\" font-family=\"Times,serif\" font-size=\"14.00\">466</text>\n",
       "</g>\n",
       "<!-- 198&#45;&gt;466 -->\n",
       "<g id=\"edge60\" class=\"edge\">\n",
       "<title>198&#45;&gt;466</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M463.47,-74.5C453.29,-64.73 439.69,-51.69 428.23,-40.7\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"430.34,-37.88 420.7,-33.49 425.5,-42.93 430.34,-37.88\"/>\n",
       "</g>\n",
       "<!-- 214 -->\n",
       "<g id=\"node10\" class=\"node\">\n",
       "<title>214</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"28.6\" cy=\"-234\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"28.6\" y=\"-230.3\" font-family=\"Times,serif\" font-size=\"14.00\">214</text>\n",
       "</g>\n",
       "<!-- 267 -->\n",
       "<g id=\"node11\" class=\"node\">\n",
       "<title>267</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"553.6\" cy=\"-90\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"553.6\" y=\"-86.3\" font-family=\"Times,serif\" font-size=\"14.00\">267</text>\n",
       "</g>\n",
       "<!-- 267&#45;&gt;48 -->\n",
       "<g id=\"edge61\" class=\"edge\">\n",
       "<title>267&#45;&gt;48</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M553.84,-71.7C553.95,-63.98 554.09,-54.71 554.21,-46.11\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"557.71,-46.15 554.35,-36.1 550.71,-46.05 557.71,-46.15\"/>\n",
       "</g>\n",
       "<!-- 267&#45;&gt;117 -->\n",
       "<g id=\"edge62\" class=\"edge\">\n",
       "<title>267&#45;&gt;117</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M569.14,-74.5C579.77,-64.58 594.03,-51.26 605.92,-40.16\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"608.41,-42.63 613.33,-33.25 603.64,-37.51 608.41,-42.63\"/>\n",
       "</g>\n",
       "<!-- 267&#45;&gt;143 -->\n",
       "<g id=\"edge63\" class=\"edge\">\n",
       "<title>267&#45;&gt;143</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M538.47,-74.5C528.29,-64.73 514.69,-51.69 503.23,-40.7\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"505.34,-37.88 495.7,-33.49 500.5,-42.93 505.34,-37.88\"/>\n",
       "</g>\n",
       "<!-- 267&#45;&gt;456 -->\n",
       "<g id=\"edge64\" class=\"edge\">\n",
       "<title>267&#45;&gt;456</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M576.05,-78.52C601.46,-66.66 643.03,-47.26 671.77,-33.85\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"673.41,-36.95 680.99,-29.55 670.45,-30.61 673.41,-36.95\"/>\n",
       "</g>\n",
       "<!-- 267&#45;&gt;466 -->\n",
       "<g id=\"edge65\" class=\"edge\">\n",
       "<title>267&#45;&gt;466</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M531.44,-78.52C506.37,-66.66 465.36,-47.26 437,-33.85\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"438.44,-30.66 427.91,-29.55 435.45,-36.99 438.44,-30.66\"/>\n",
       "</g>\n",
       "<!-- 281 -->\n",
       "<g id=\"node12\" class=\"node\">\n",
       "<title>281</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"103.6\" cy=\"-234\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"103.6\" y=\"-230.3\" font-family=\"Times,serif\" font-size=\"14.00\">281</text>\n",
       "</g>\n",
       "<!-- 297 -->\n",
       "<g id=\"node13\" class=\"node\">\n",
       "<title>297</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"440.6\" cy=\"-306\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"440.6\" y=\"-302.3\" font-family=\"Times,serif\" font-size=\"14.00\">297</text>\n",
       "</g>\n",
       "<!-- 297&#45;&gt;77 -->\n",
       "<g id=\"edge3\" class=\"edge\">\n",
       "<title>297&#45;&gt;77</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M461.65,-293.82C466.75,-291.54 472.27,-289.41 477.6,-288 656.15,-240.75 713.3,-300.19 891.6,-252 893.55,-251.47 895.52,-250.84 897.49,-250.14\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"899.21,-253.22 907.14,-246.19 896.56,-246.75 899.21,-253.22\"/>\n",
       "</g>\n",
       "<!-- 297&#45;&gt;126 -->\n",
       "<g id=\"edge4\" class=\"edge\">\n",
       "<title>297&#45;&gt;126</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M462.1,-293.83C467.08,-291.61 472.44,-289.5 477.6,-288 591.3,-254.92 627.89,-285.08 741.6,-252 743.53,-251.44 745.49,-250.79 747.45,-250.08\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"749.15,-253.17 757.1,-246.17 746.51,-246.69 749.15,-253.17\"/>\n",
       "</g>\n",
       "<!-- 297&#45;&gt;132 -->\n",
       "<g id=\"edge5\" class=\"edge\">\n",
       "<title>297&#45;&gt;132</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M462.07,-293.72C467.05,-291.5 472.42,-289.42 477.6,-288 623.69,-247.84 670.5,-292.16 816.6,-252 818.54,-251.47 820.51,-250.84 822.47,-250.15\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"824.15,-253.25 832.13,-246.28 821.54,-246.75 824.15,-253.25\"/>\n",
       "</g>\n",
       "<!-- 297&#45;&gt;142 -->\n",
       "<g id=\"edge6\" class=\"edge\">\n",
       "<title>297&#45;&gt;142</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M462.16,-294.03C467.14,-291.8 472.48,-289.64 477.6,-288 559.05,-261.96 585.15,-278.04 666.6,-252 668.52,-251.39 670.47,-250.7 672.42,-249.96\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"674.14,-253.04 682.03,-245.97 671.46,-246.57 674.14,-253.04\"/>\n",
       "</g>\n",
       "<!-- 297&#45;&gt;214 -->\n",
       "<g id=\"edge7\" class=\"edge\">\n",
       "<title>297&#45;&gt;214</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M411.78,-303.77C348.1,-300.44 191.14,-288.86 65.6,-252 63.66,-251.43 61.7,-250.78 59.74,-250.07\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"60.69,-246.68 50.11,-246.15 58.05,-253.16 60.69,-246.68\"/>\n",
       "</g>\n",
       "<!-- 297&#45;&gt;281 -->\n",
       "<g id=\"edge8\" class=\"edge\">\n",
       "<title>297&#45;&gt;281</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M412.32,-302.44C358.44,-297.03 237.78,-282.36 140.6,-252 138.67,-251.4 136.72,-250.72 134.77,-249.99\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"135.72,-246.6 125.14,-246.02 133.05,-253.07 135.72,-246.6\"/>\n",
       "</g>\n",
       "<!-- 330 -->\n",
       "<g id=\"node15\" class=\"node\">\n",
       "<title>330</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"178.6\" cy=\"-234\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"178.6\" y=\"-230.3\" font-family=\"Times,serif\" font-size=\"14.00\">330</text>\n",
       "</g>\n",
       "<!-- 297&#45;&gt;330 -->\n",
       "<g id=\"edge9\" class=\"edge\">\n",
       "<title>297&#45;&gt;330</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M413.09,-300.35C370.18,-292.7 285.05,-275.87 215.6,-252 213.69,-251.35 211.75,-250.63 209.81,-249.86\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"210.79,-246.48 200.21,-245.8 208.06,-252.92 210.79,-246.48\"/>\n",
       "</g>\n",
       "<!-- 397 -->\n",
       "<g id=\"node18\" class=\"node\">\n",
       "<title>397</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"253.6\" cy=\"-234\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"253.6\" y=\"-230.3\" font-family=\"Times,serif\" font-size=\"14.00\">397</text>\n",
       "</g>\n",
       "<!-- 297&#45;&gt;397 -->\n",
       "<g id=\"edge10\" class=\"edge\">\n",
       "<title>297&#45;&gt;397</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M415.65,-296.96C385.67,-287.12 333.98,-269.59 290.6,-252 288.78,-251.26 286.92,-250.49 285.05,-249.69\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"286.32,-246.42 275.76,-245.58 283.49,-252.82 286.32,-246.42\"/>\n",
       "</g>\n",
       "<!-- 425 -->\n",
       "<g id=\"node20\" class=\"node\">\n",
       "<title>425</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"628.6\" cy=\"-234\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"628.6\" y=\"-230.3\" font-family=\"Times,serif\" font-size=\"14.00\">425</text>\n",
       "</g>\n",
       "<!-- 297&#45;&gt;425 -->\n",
       "<g id=\"edge11\" class=\"edge\">\n",
       "<title>297&#45;&gt;425</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M462.71,-294.3C467.57,-292.1 472.72,-289.88 477.6,-288 527.17,-268.87 542.03,-271.13 591.6,-252 593.43,-251.29 595.3,-250.54 597.17,-249.76\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"598.71,-252.91 606.49,-245.7 595.92,-246.49 598.71,-252.91\"/>\n",
       "</g>\n",
       "<!-- 452 -->\n",
       "<g id=\"node22\" class=\"node\">\n",
       "<title>452</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"328.6\" cy=\"-234\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"328.6\" y=\"-230.3\" font-family=\"Times,serif\" font-size=\"14.00\">452</text>\n",
       "</g>\n",
       "<!-- 297&#45;&gt;452 -->\n",
       "<g id=\"edge12\" class=\"edge\">\n",
       "<title>297&#45;&gt;452</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M421.09,-292.81C403.37,-281.73 377.02,-265.26 356.97,-252.73\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"358.59,-249.62 348.26,-247.29 354.88,-255.56 358.59,-249.62\"/>\n",
       "</g>\n",
       "<!-- 455 -->\n",
       "<g id=\"node23\" class=\"node\">\n",
       "<title>455</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"403.6\" cy=\"-234\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"403.6\" y=\"-230.3\" font-family=\"Times,serif\" font-size=\"14.00\">455</text>\n",
       "</g>\n",
       "<!-- 297&#45;&gt;455 -->\n",
       "<g id=\"edge13\" class=\"edge\">\n",
       "<title>297&#45;&gt;455</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M432.02,-288.76C427.6,-280.4 422.11,-270.02 417.13,-260.61\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"420.16,-258.84 412.39,-251.63 413.97,-262.11 420.16,-258.84\"/>\n",
       "</g>\n",
       "<!-- 503 -->\n",
       "<g id=\"node27\" class=\"node\">\n",
       "<title>503</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"478.6\" cy=\"-234\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"478.6\" y=\"-230.3\" font-family=\"Times,serif\" font-size=\"14.00\">503</text>\n",
       "</g>\n",
       "<!-- 297&#45;&gt;503 -->\n",
       "<g id=\"edge14\" class=\"edge\">\n",
       "<title>297&#45;&gt;503</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M449.41,-288.76C454.02,-280.28 459.75,-269.71 464.92,-260.2\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"468.14,-261.61 469.83,-251.15 461.98,-258.27 468.14,-261.61\"/>\n",
       "</g>\n",
       "<!-- 548 -->\n",
       "<g id=\"node30\" class=\"node\">\n",
       "<title>548</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"553.6\" cy=\"-234\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"553.6\" y=\"-230.3\" font-family=\"Times,serif\" font-size=\"14.00\">548</text>\n",
       "</g>\n",
       "<!-- 297&#45;&gt;548 -->\n",
       "<g id=\"edge15\" class=\"edge\">\n",
       "<title>297&#45;&gt;548</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M460.28,-292.81C478.24,-281.68 504.98,-265.12 525.24,-252.57\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"527.1,-255.53 533.76,-247.29 523.42,-249.58 527.1,-255.53\"/>\n",
       "</g>\n",
       "<!-- 489 -->\n",
       "<g id=\"node26\" class=\"node\">\n",
       "<title>489</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"703.6\" cy=\"-90\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"703.6\" y=\"-86.3\" font-family=\"Times,serif\" font-size=\"14.00\">489</text>\n",
       "</g>\n",
       "<!-- 308&#45;&gt;489 -->\n",
       "<g id=\"edge43\" class=\"edge\">\n",
       "<title>308&#45;&gt;489</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M763.06,-146.5C752.43,-136.58 738.16,-123.26 726.27,-112.16\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"728.56,-109.51 718.86,-105.25 723.78,-114.63 728.56,-109.51\"/>\n",
       "</g>\n",
       "<!-- 341 -->\n",
       "<g id=\"node16\" class=\"node\">\n",
       "<title>341</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"553.6\" cy=\"-162\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"553.6\" y=\"-158.3\" font-family=\"Times,serif\" font-size=\"14.00\">341</text>\n",
       "</g>\n",
       "<!-- 341&#45;&gt;198 -->\n",
       "<g id=\"edge44\" class=\"edge\">\n",
       "<title>341&#45;&gt;198</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M538.06,-146.5C527.43,-136.58 513.16,-123.26 501.27,-112.16\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"503.56,-109.51 493.86,-105.25 498.78,-114.63 503.56,-109.51\"/>\n",
       "</g>\n",
       "<!-- 341&#45;&gt;267 -->\n",
       "<g id=\"edge45\" class=\"edge\">\n",
       "<title>341&#45;&gt;267</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M553.6,-143.7C553.6,-135.98 553.6,-126.71 553.6,-118.11\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"557.1,-118.1 553.6,-108.1 550.1,-118.1 557.1,-118.1\"/>\n",
       "</g>\n",
       "<!-- 363 -->\n",
       "<g id=\"node17\" class=\"node\">\n",
       "<title>363</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"628.6\" cy=\"-90\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"628.6\" y=\"-86.3\" font-family=\"Times,serif\" font-size=\"14.00\">363</text>\n",
       "</g>\n",
       "<!-- 341&#45;&gt;363 -->\n",
       "<g id=\"edge46\" class=\"edge\">\n",
       "<title>341&#45;&gt;363</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M569.14,-146.5C579.77,-136.58 594.03,-123.26 605.92,-112.16\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"608.41,-114.63 613.33,-105.25 603.64,-109.51 608.41,-114.63\"/>\n",
       "</g>\n",
       "<!-- 341&#45;&gt;489 -->\n",
       "<g id=\"edge47\" class=\"edge\">\n",
       "<title>341&#45;&gt;489</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M576.05,-150.52C601.46,-138.66 643.03,-119.26 671.77,-105.85\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"673.41,-108.95 680.99,-101.55 670.45,-102.61 673.41,-108.95\"/>\n",
       "</g>\n",
       "<!-- 363&#45;&gt;48 -->\n",
       "<g id=\"edge66\" class=\"edge\">\n",
       "<title>363&#45;&gt;48</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M613.26,-74.5C602.78,-64.58 588.7,-51.26 576.97,-40.16\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"579.33,-37.58 569.66,-33.25 574.52,-42.66 579.33,-37.58\"/>\n",
       "</g>\n",
       "<!-- 363&#45;&gt;117 -->\n",
       "<g id=\"edge67\" class=\"edge\">\n",
       "<title>363&#45;&gt;117</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M628.6,-71.7C628.6,-63.98 628.6,-54.71 628.6,-46.11\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"632.1,-46.1 628.6,-36.1 625.1,-46.1 632.1,-46.1\"/>\n",
       "</g>\n",
       "<!-- 363&#45;&gt;143 -->\n",
       "<g id=\"edge68\" class=\"edge\">\n",
       "<title>363&#45;&gt;143</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M606.44,-78.52C581.37,-66.66 540.36,-47.26 512,-33.85\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"513.44,-30.66 502.91,-29.55 510.45,-36.99 513.44,-30.66\"/>\n",
       "</g>\n",
       "<!-- 363&#45;&gt;456 -->\n",
       "<g id=\"edge69\" class=\"edge\">\n",
       "<title>363&#45;&gt;456</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M644.14,-74.5C654.77,-64.58 669.03,-51.26 680.92,-40.16\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"683.41,-42.63 688.33,-33.25 678.64,-37.51 683.41,-42.63\"/>\n",
       "</g>\n",
       "<!-- 363&#45;&gt;466 -->\n",
       "<g id=\"edge70\" class=\"edge\">\n",
       "<title>363&#45;&gt;466</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M606.97,-78.22C602,-75.97 596.67,-73.76 591.6,-72 527.23,-49.67 506.96,-58.33 442.6,-36 440.69,-35.34 438.76,-34.62 436.81,-33.85\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"437.8,-30.46 427.22,-29.78 435.06,-36.91 437.8,-30.46\"/>\n",
       "</g>\n",
       "<!-- 406 -->\n",
       "<g id=\"node19\" class=\"node\">\n",
       "<title>406</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"515.6\" cy=\"-306\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"515.6\" y=\"-302.3\" font-family=\"Times,serif\" font-size=\"14.00\">406</text>\n",
       "</g>\n",
       "<!-- 406&#45;&gt;77 -->\n",
       "<g id=\"edge16\" class=\"edge\">\n",
       "<title>406&#45;&gt;77</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M544.05,-303.9C607.63,-300.82 765.6,-289.68 891.6,-252 893.53,-251.42 895.5,-250.75 897.46,-250.02\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"899.21,-253.08 907.08,-245.99 896.5,-246.63 899.21,-253.08\"/>\n",
       "</g>\n",
       "<!-- 406&#45;&gt;126 -->\n",
       "<g id=\"edge17\" class=\"edge\">\n",
       "<title>406&#45;&gt;126</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M542.88,-300.43C585.86,-292.83 671.65,-276 741.6,-252 743.5,-251.35 745.44,-250.63 747.39,-249.87\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"749.13,-252.93 756.98,-245.81 746.41,-246.48 749.13,-252.93\"/>\n",
       "</g>\n",
       "<!-- 406&#45;&gt;132 -->\n",
       "<g id=\"edge18\" class=\"edge\">\n",
       "<title>406&#45;&gt;132</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M543.97,-302.45C598.03,-297.06 719.09,-282.43 816.6,-252 818.52,-251.4 820.47,-250.72 822.43,-249.99\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"824.14,-253.07 832.05,-246.02 821.47,-246.6 824.14,-253.07\"/>\n",
       "</g>\n",
       "<!-- 406&#45;&gt;142 -->\n",
       "<g id=\"edge19\" class=\"edge\">\n",
       "<title>406&#45;&gt;142</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M540.45,-297.07C570.59,-287.26 622.81,-269.7 666.6,-252 668.42,-251.26 670.28,-250.49 672.14,-249.69\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"673.7,-252.83 681.44,-245.59 670.88,-246.42 673.7,-252.83\"/>\n",
       "</g>\n",
       "<!-- 406&#45;&gt;214 -->\n",
       "<g id=\"edge20\" class=\"edge\">\n",
       "<title>406&#45;&gt;214</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M494.54,-293.82C489.44,-291.54 483.93,-289.41 478.6,-288 300.48,-240.84 243.71,-299.16 65.6,-252 63.43,-251.43 61.24,-250.73 59.05,-249.96\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"60.24,-246.67 49.65,-246.18 57.62,-253.16 60.24,-246.67\"/>\n",
       "</g>\n",
       "<!-- 406&#45;&gt;281 -->\n",
       "<g id=\"edge21\" class=\"edge\">\n",
       "<title>406&#45;&gt;281</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M494.13,-293.72C489.14,-291.5 483.78,-289.42 478.6,-288 332.93,-247.94 286.26,-292.06 140.6,-252 138.65,-251.47 136.69,-250.84 134.72,-250.15\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"135.65,-246.75 125.07,-246.28 133.05,-253.25 135.65,-246.75\"/>\n",
       "</g>\n",
       "<!-- 406&#45;&gt;330 -->\n",
       "<g id=\"edge22\" class=\"edge\">\n",
       "<title>406&#45;&gt;330</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M494.09,-293.83C489.11,-291.61 483.76,-289.5 478.6,-288 365.32,-255.01 328.87,-284.99 215.6,-252 213.66,-251.44 211.7,-250.79 209.74,-250.08\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"210.68,-246.69 200.1,-246.17 208.05,-253.17 210.68,-246.69\"/>\n",
       "</g>\n",
       "<!-- 406&#45;&gt;397 -->\n",
       "<g id=\"edge23\" class=\"edge\">\n",
       "<title>406&#45;&gt;397</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M494.03,-294.04C489.05,-291.8 483.71,-289.64 478.6,-288 397.58,-262.05 371.62,-277.95 290.6,-252 288.68,-251.39 286.73,-250.7 284.78,-249.96\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"285.74,-246.57 275.16,-245.96 283.05,-253.03 285.74,-246.57\"/>\n",
       "</g>\n",
       "<!-- 406&#45;&gt;425 -->\n",
       "<g id=\"edge24\" class=\"edge\">\n",
       "<title>406&#45;&gt;425</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M535.28,-292.81C553.24,-281.68 579.98,-265.12 600.24,-252.57\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"602.1,-255.53 608.76,-247.29 598.42,-249.58 602.1,-255.53\"/>\n",
       "</g>\n",
       "<!-- 406&#45;&gt;452 -->\n",
       "<g id=\"edge25\" class=\"edge\">\n",
       "<title>406&#45;&gt;452</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M493.48,-294.31C488.63,-292.11 483.48,-289.89 478.6,-288 429.45,-268.96 414.75,-271.04 365.6,-252 363.77,-251.29 361.9,-250.54 360.02,-249.75\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"361.28,-246.48 350.71,-245.69 358.48,-252.9 361.28,-246.48\"/>\n",
       "</g>\n",
       "<!-- 406&#45;&gt;455 -->\n",
       "<g id=\"edge26\" class=\"edge\">\n",
       "<title>406&#45;&gt;455</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M496.09,-292.81C478.37,-281.73 452.02,-265.26 431.97,-252.73\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"433.59,-249.62 423.26,-247.29 429.88,-255.56 433.59,-249.62\"/>\n",
       "</g>\n",
       "<!-- 406&#45;&gt;503 -->\n",
       "<g id=\"edge27\" class=\"edge\">\n",
       "<title>406&#45;&gt;503</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M507.02,-288.76C502.6,-280.4 497.11,-270.02 492.13,-260.61\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"495.16,-258.84 487.39,-251.63 488.97,-262.11 495.16,-258.84\"/>\n",
       "</g>\n",
       "<!-- 406&#45;&gt;548 -->\n",
       "<g id=\"edge28\" class=\"edge\">\n",
       "<title>406&#45;&gt;548</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M524.41,-288.76C529.02,-280.28 534.75,-269.71 539.92,-260.2\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"543.14,-261.61 544.83,-251.15 536.98,-258.27 543.14,-261.61\"/>\n",
       "</g>\n",
       "<!-- 425&#45;&gt;106 -->\n",
       "<g id=\"edge35\" class=\"edge\">\n",
       "<title>425&#45;&gt;106</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M644.14,-218.5C654.77,-208.58 669.03,-195.26 680.92,-184.16\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"683.41,-186.63 688.33,-177.25 678.64,-181.51 683.41,-186.63\"/>\n",
       "</g>\n",
       "<!-- 425&#45;&gt;308 -->\n",
       "<g id=\"edge36\" class=\"edge\">\n",
       "<title>425&#45;&gt;308</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M651.05,-222.52C676.46,-210.66 718.03,-191.26 746.77,-177.85\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"748.41,-180.95 755.99,-173.55 745.45,-174.61 748.41,-180.95\"/>\n",
       "</g>\n",
       "<!-- 435 -->\n",
       "<g id=\"node21\" class=\"node\">\n",
       "<title>435</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"628.6\" cy=\"-162\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"628.6\" y=\"-158.3\" font-family=\"Times,serif\" font-size=\"14.00\">435</text>\n",
       "</g>\n",
       "<!-- 425&#45;&gt;435 -->\n",
       "<g id=\"edge37\" class=\"edge\">\n",
       "<title>425&#45;&gt;435</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M628.6,-215.7C628.6,-207.98 628.6,-198.71 628.6,-190.11\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"632.1,-190.1 628.6,-180.1 625.1,-190.1 632.1,-190.1\"/>\n",
       "</g>\n",
       "<!-- 435&#45;&gt;198 -->\n",
       "<g id=\"edge48\" class=\"edge\">\n",
       "<title>435&#45;&gt;198</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M606.14,-150.52C580.73,-138.66 539.16,-119.26 510.42,-105.85\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"511.75,-102.61 501.21,-101.55 508.79,-108.95 511.75,-102.61\"/>\n",
       "</g>\n",
       "<!-- 435&#45;&gt;267 -->\n",
       "<g id=\"edge49\" class=\"edge\">\n",
       "<title>435&#45;&gt;267</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M613.06,-146.5C602.43,-136.58 588.16,-123.26 576.27,-112.16\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"578.56,-109.51 568.86,-105.25 573.78,-114.63 578.56,-109.51\"/>\n",
       "</g>\n",
       "<!-- 435&#45;&gt;363 -->\n",
       "<g id=\"edge50\" class=\"edge\">\n",
       "<title>435&#45;&gt;363</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M628.6,-143.7C628.6,-135.98 628.6,-126.71 628.6,-118.11\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"632.1,-118.1 628.6,-108.1 625.1,-118.1 632.1,-118.1\"/>\n",
       "</g>\n",
       "<!-- 435&#45;&gt;489 -->\n",
       "<g id=\"edge51\" class=\"edge\">\n",
       "<title>435&#45;&gt;489</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M644.14,-146.5C654.77,-136.58 669.03,-123.26 680.92,-112.16\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"683.41,-114.63 688.33,-105.25 678.64,-109.51 683.41,-114.63\"/>\n",
       "</g>\n",
       "<!-- 489&#45;&gt;48 -->\n",
       "<g id=\"edge71\" class=\"edge\">\n",
       "<title>489&#45;&gt;48</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M681.08,-78.46C658.27,-67.78 621.97,-50.76 590.6,-36 588.82,-35.16 586.98,-34.3 585.14,-33.43\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"586.45,-30.18 575.91,-29.08 583.46,-36.51 586.45,-30.18\"/>\n",
       "</g>\n",
       "<!-- 489&#45;&gt;117 -->\n",
       "<g id=\"edge72\" class=\"edge\">\n",
       "<title>489&#45;&gt;117</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M688.06,-74.5C677.43,-64.58 663.16,-51.26 651.27,-40.16\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"653.56,-37.51 643.86,-33.25 648.78,-42.63 653.56,-37.51\"/>\n",
       "</g>\n",
       "<!-- 489&#45;&gt;456 -->\n",
       "<g id=\"edge73\" class=\"edge\">\n",
       "<title>489&#45;&gt;456</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M703.6,-71.7C703.6,-63.98 703.6,-54.71 703.6,-46.11\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"707.1,-46.1 703.6,-36.1 700.1,-46.1 707.1,-46.1\"/>\n",
       "</g>\n",
       "<!-- 524 -->\n",
       "<g id=\"node28\" class=\"node\">\n",
       "<title>524</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"478.6\" cy=\"-162\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"478.6\" y=\"-158.3\" font-family=\"Times,serif\" font-size=\"14.00\">524</text>\n",
       "</g>\n",
       "<!-- 524&#45;&gt;198 -->\n",
       "<g id=\"edge52\" class=\"edge\">\n",
       "<title>524&#45;&gt;198</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M478.6,-143.7C478.6,-135.98 478.6,-126.71 478.6,-118.11\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"482.1,-118.1 478.6,-108.1 475.1,-118.1 482.1,-118.1\"/>\n",
       "</g>\n",
       "<!-- 524&#45;&gt;267 -->\n",
       "<g id=\"edge53\" class=\"edge\">\n",
       "<title>524&#45;&gt;267</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M494.14,-146.5C504.77,-136.58 519.03,-123.26 530.92,-112.16\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"533.41,-114.63 538.33,-105.25 528.64,-109.51 533.41,-114.63\"/>\n",
       "</g>\n",
       "<!-- 524&#45;&gt;363 -->\n",
       "<g id=\"edge54\" class=\"edge\">\n",
       "<title>524&#45;&gt;363</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M501.05,-150.52C526.46,-138.66 568.03,-119.26 596.77,-105.85\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"598.41,-108.95 605.99,-101.55 595.45,-102.61 598.41,-108.95\"/>\n",
       "</g>\n",
       "<!-- 524&#45;&gt;489 -->\n",
       "<g id=\"edge55\" class=\"edge\">\n",
       "<title>524&#45;&gt;489</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M500.22,-150.21C505.19,-147.96 510.52,-145.75 515.6,-144 580.81,-121.49 601.38,-130.51 666.6,-108 668.5,-107.34 670.44,-106.62 672.38,-105.86\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"674.13,-108.92 681.98,-101.79 671.4,-102.47 674.13,-108.92\"/>\n",
       "</g>\n",
       "<!-- 535 -->\n",
       "<g id=\"node29\" class=\"node\">\n",
       "<title>535</title>\n",
       "<ellipse fill=\"#f0efed\" stroke=\"#f0efed\" cx=\"477.6\" cy=\"-378\" rx=\"28.7\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"477.6\" y=\"-374.3\" font-family=\"Times,serif\" font-size=\"14.00\">535</text>\n",
       "</g>\n",
       "<!-- 535&#45;&gt;297 -->\n",
       "<g id=\"edge1\" class=\"edge\">\n",
       "<title>535&#45;&gt;297</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M469.02,-360.76C464.6,-352.4 459.11,-342.02 454.13,-332.61\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"457.16,-330.84 449.39,-323.63 450.97,-334.11 457.16,-330.84\"/>\n",
       "</g>\n",
       "<!-- 535&#45;&gt;406 -->\n",
       "<g id=\"edge2\" class=\"edge\">\n",
       "<title>535&#45;&gt;406</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M486.41,-360.76C491.02,-352.28 496.75,-341.71 501.92,-332.2\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"505.14,-333.61 506.83,-323.15 498.98,-330.27 505.14,-333.61\"/>\n",
       "</g>\n",
       "<!-- 548&#45;&gt;106 -->\n",
       "<g id=\"edge38\" class=\"edge\">\n",
       "<title>548&#45;&gt;106</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M576.05,-222.52C601.46,-210.66 643.03,-191.26 671.77,-177.85\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"673.41,-180.95 680.99,-173.55 670.45,-174.61 673.41,-180.95\"/>\n",
       "</g>\n",
       "<!-- 548&#45;&gt;308 -->\n",
       "<g id=\"edge39\" class=\"edge\">\n",
       "<title>548&#45;&gt;308</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M575.22,-222.21C580.19,-219.96 585.52,-217.75 590.6,-216 655.81,-193.49 676.38,-202.51 741.6,-180 743.5,-179.34 745.44,-178.62 747.38,-177.86\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"749.13,-180.92 756.98,-173.79 746.4,-174.47 749.13,-180.92\"/>\n",
       "</g>\n",
       "<!-- 548&#45;&gt;341 -->\n",
       "<g id=\"edge40\" class=\"edge\">\n",
       "<title>548&#45;&gt;341</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M553.6,-215.7C553.6,-207.98 553.6,-198.71 553.6,-190.11\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"557.1,-190.1 553.6,-180.1 550.1,-190.1 557.1,-190.1\"/>\n",
       "</g>\n",
       "<!-- 548&#45;&gt;435 -->\n",
       "<g id=\"edge41\" class=\"edge\">\n",
       "<title>548&#45;&gt;435</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M569.14,-218.5C579.77,-208.58 594.03,-195.26 605.92,-184.16\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"608.41,-186.63 613.33,-177.25 603.64,-181.51 608.41,-186.63\"/>\n",
       "</g>\n",
       "<!-- 548&#45;&gt;524 -->\n",
       "<g id=\"edge42\" class=\"edge\">\n",
       "<title>548&#45;&gt;524</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M538.06,-218.5C527.43,-208.58 513.16,-195.26 501.27,-184.16\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"503.56,-181.51 493.86,-177.25 498.78,-186.63 503.56,-181.51\"/>\n",
       "</g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "<graphviz.graphs.Digraph at 0x7f7e67083b20>"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pr_dfg.get_dfg().visualize()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Mining for the Causes of Performance  Differences"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**1. Creating a best/worse bifurcation of the ranks**: We do not find a nice bifurcation as in the GLS example.Therefore, based on a visual inspection of the DFG and box plots, we decided to mine for performance differences between the variants in $good = \\{Rank 0, Rank 1, Rank 2\\}$ and  $bad = \\{Rank 5\\}$. Note that the BPI tools allow for interactive analysis based on visual inspection.\n",
    "\n",
    "**2. Identify the dependencies among the events:** We use the ``pm4py`` library to prepare a Directly-Follows Graph (DFG); there is a node for every unique event and an an edge from ``eventA`` to ``eventB`` exists if ``eventA`` immediately follows ``eventB`` in atleast one of the cases.\n",
    "\n",
    "**3. Graph coloring**: We color the nodes and edges of the graph as follows:\n",
    "\n",
    "- The nodes and edges that occur *only* in the $good$ variants are indicated in *green*.  \n",
    "- The nodes and edges that occur *only* in the $bad$ variants are indicated in *red*.\n",
    "- The nodes and edges that occur *both* in both $good$ and $bad$ are not colored."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "good = R[0]+R[1]+R[2]\n",
    "bad = R[5]\n",
    "\n",
    "good = list(map(int, good))\n",
    "bad = list(map(int, bad))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pm4py.objects.conversion.log import converter as log_converter\n",
    "from variants_compare import VariantsCompare\n",
    "\n",
    "df_events['case:variant_id'] = df_events.apply(lambda x: var_id_dict[x['case:variant']], axis=1)\n",
    "df_ = df_events.drop(columns=['case:variant'])\n",
    "xes_log = log_converter.apply(df_)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n",
       " \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n",
       "<!-- Generated by graphviz version 2.43.0 (0)\n",
       " -->\n",
       "<!-- Title: %3 Pages: 1 -->\n",
       "<svg width=\"952pt\" height=\"689pt\"\n",
       " viewBox=\"0.00 0.00 952.36 688.94\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n",
       "<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 684.94)\">\n",
       "<title>%3</title>\n",
       "<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-684.94 948.36,-684.94 948.36,4 -4,4\"/>\n",
       "<!-- 6761698098749337524 -->\n",
       "<g id=\"node1\" class=\"node\">\n",
       "<title>6761698098749337524</title>\n",
       "<polygon fill=\"#a6faa5\" stroke=\"black\" points=\"480.86,-218.47 295.86,-218.47 295.86,-182.47 480.86,-182.47 480.86,-218.47\"/>\n",
       "<text text-anchor=\"middle\" x=\"388.36\" y=\"-197.37\" font-family=\"Times,serif\" font-size=\"12.00\">Block Purchase Order Item </text>\n",
       "</g>\n",
       "<!-- @@endnode -->\n",
       "<g id=\"node2\" class=\"node\">\n",
       "<title>@@endnode</title>\n",
       "<ellipse fill=\"none\" stroke=\"black\" cx=\"716.36\" cy=\"-109.23\" rx=\"33.44\" ry=\"33.44\"/>\n",
       "<ellipse fill=\"none\" stroke=\"black\" cx=\"716.36\" cy=\"-109.23\" rx=\"37.47\" ry=\"37.47\"/>\n",
       "<text text-anchor=\"start\" x=\"700.86\" y=\"-101.13\" font-family=\"Times,serif\" font-size=\"32.00\">■</text>\n",
       "</g>\n",
       "<!-- 6761698098749337524&#45;&gt;@@endnode -->\n",
       "<g id=\"edge1\" class=\"edge\">\n",
       "<title>6761698098749337524&#45;&gt;@@endnode</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" d=\"M451.21,-182.37C515.44,-164.9 613.62,-138.19 670.75,-122.64\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" points=\"671.85,-125.97 680.58,-119.97 670.01,-119.22 671.85,-125.97\"/>\n",
       "</g>\n",
       "<!-- 8960506394539949144 -->\n",
       "<g id=\"node3\" class=\"node\">\n",
       "<title>8960506394539949144</title>\n",
       "<polygon fill=\"#ffffff\" stroke=\"black\" points=\"752.86,-665.7 653.86,-665.7 653.86,-629.7 752.86,-629.7 752.86,-665.7\"/>\n",
       "<text text-anchor=\"middle\" x=\"703.36\" y=\"-644.6\" font-family=\"Times,serif\" font-size=\"12.00\">Book Invoice </text>\n",
       "</g>\n",
       "<!-- 8960506394539949144&#45;&gt;@@endnode -->\n",
       "<g id=\"edge5\" class=\"edge\">\n",
       "<title>8960506394539949144&#45;&gt;@@endnode</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M753.02,-632.34C813.11,-611.54 906.36,-566.81 906.36,-489.47 906.36,-489.47 906.36,-489.47 906.36,-415.47 906.36,-305.08 887.92,-269.76 820.36,-182.47 803.87,-161.17 779.35,-143.72 758.26,-131.3\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"759.88,-128.2 749.46,-126.3 756.42,-134.28 759.88,-128.2\"/>\n",
       "</g>\n",
       "<!-- &#45;8486058042542249863 -->\n",
       "<g id=\"node4\" class=\"node\">\n",
       "<title>&#45;8486058042542249863</title>\n",
       "<polygon fill=\"#ffffff\" stroke=\"black\" points=\"828.36,-578.47 676.36,-578.47 676.36,-542.47 828.36,-542.47 828.36,-578.47\"/>\n",
       "<text text-anchor=\"middle\" x=\"752.36\" y=\"-557.37\" font-family=\"Times,serif\" font-size=\"12.00\">Cancel Goods Receipt </text>\n",
       "</g>\n",
       "<!-- 8960506394539949144&#45;&gt;&#45;8486058042542249863 -->\n",
       "<g id=\"edge2\" class=\"edge\">\n",
       "<title>8960506394539949144&#45;&gt;&#45;8486058042542249863</title>\n",
       "<path fill=\"none\" stroke=\"red\" stroke-width=\"1\" d=\"M713.27,-629.45C720.18,-617.44 729.52,-601.19 737.34,-587.6\"/>\n",
       "<polygon fill=\"red\" stroke=\"red\" stroke-width=\"1\" points=\"740.51,-589.1 742.46,-578.69 734.44,-585.62 740.51,-589.1\"/>\n",
       "</g>\n",
       "<!-- 5171068905532438498 -->\n",
       "<g id=\"node5\" class=\"node\">\n",
       "<title>5171068905532438498</title>\n",
       "<polygon fill=\"#ffffff\" stroke=\"black\" points=\"446.36,-362.47 324.36,-362.47 324.36,-326.47 446.36,-326.47 446.36,-362.47\"/>\n",
       "<text text-anchor=\"middle\" x=\"385.36\" y=\"-341.37\" font-family=\"Times,serif\" font-size=\"12.00\">Change Quantity </text>\n",
       "</g>\n",
       "<!-- 8960506394539949144&#45;&gt;5171068905532438498 -->\n",
       "<g id=\"edge3\" class=\"edge\">\n",
       "<title>8960506394539949144&#45;&gt;5171068905532438498</title>\n",
       "<path fill=\"none\" stroke=\"red\" stroke-width=\"1\" d=\"M684.93,-629.54C649.6,-596.97 569.32,-524.6 496.36,-470.47 472.59,-452.84 461.09,-455.58 440.36,-434.47 422.28,-416.07 407.33,-390.69 397.61,-371.75\"/>\n",
       "<polygon fill=\"red\" stroke=\"red\" stroke-width=\"1\" points=\"400.72,-370.15 393.14,-362.76 394.46,-373.27 400.72,-370.15\"/>\n",
       "</g>\n",
       "<!-- 30601589414796702 -->\n",
       "<g id=\"node6\" class=\"node\">\n",
       "<title>30601589414796702</title>\n",
       "<polygon fill=\"#ffffff\" stroke=\"black\" points=\"688.36,-506.47 590.36,-506.47 590.36,-470.47 688.36,-470.47 688.36,-506.47\"/>\n",
       "<text text-anchor=\"middle\" x=\"639.36\" y=\"-485.37\" font-family=\"Times,serif\" font-size=\"12.00\">Scan Invoice </text>\n",
       "</g>\n",
       "<!-- 8960506394539949144&#45;&gt;30601589414796702 -->\n",
       "<g id=\"edge4\" class=\"edge\">\n",
       "<title>8960506394539949144&#45;&gt;30601589414796702</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" stroke-width=\"1.02\" d=\"M685.77,-629.45C676.39,-615.9 665.83,-596.39 658.36,-578.47 649.9,-558.19 642.55,-534.42 638.84,-516.55\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" stroke-width=\"1.02\" points=\"642.25,-515.76 637.06,-506.52 635.36,-516.98 642.25,-515.76\"/>\n",
       "</g>\n",
       "<!-- &#45;8486058042542249863&#45;&gt;@@endnode -->\n",
       "<g id=\"edge8\" class=\"edge\">\n",
       "<title>&#45;8486058042542249863&#45;&gt;@@endnode</title>\n",
       "<path fill=\"none\" stroke=\"red\" d=\"M769.28,-542.32C792.22,-517.18 830.36,-467.82 830.36,-417.47 830.36,-417.47 830.36,-417.47 830.36,-271.47 830.36,-217.2 786.76,-168.39 753.49,-139.04\"/>\n",
       "<polygon fill=\"red\" stroke=\"red\" points=\"755.58,-136.23 745.71,-132.37 751.02,-141.54 755.58,-136.23\"/>\n",
       "</g>\n",
       "<!-- &#45;8486058042542249863&#45;&gt;30601589414796702 -->\n",
       "<g id=\"edge7\" class=\"edge\">\n",
       "<title>&#45;8486058042542249863&#45;&gt;30601589414796702</title>\n",
       "<path fill=\"none\" stroke=\"red\" stroke-width=\"1\" d=\"M724.71,-542.34C709.94,-533.19 691.57,-521.81 675.65,-511.95\"/>\n",
       "<polygon fill=\"red\" stroke=\"red\" stroke-width=\"1\" points=\"677.45,-508.95 667.11,-506.66 673.76,-514.9 677.45,-508.95\"/>\n",
       "</g>\n",
       "<!-- 8928093050461230673 -->\n",
       "<g id=\"node7\" class=\"node\">\n",
       "<title>8928093050461230673</title>\n",
       "<polygon fill=\"#ffffff\" stroke=\"black\" points=\"272.86,-36 163.86,-36 163.86,0 272.86,0 272.86,-36\"/>\n",
       "<text text-anchor=\"middle\" x=\"218.36\" y=\"-14.9\" font-family=\"Times,serif\" font-size=\"12.00\">Receive Goods </text>\n",
       "</g>\n",
       "<!-- &#45;8486058042542249863&#45;&gt;8928093050461230673 -->\n",
       "<g id=\"edge6\" class=\"edge\">\n",
       "<title>&#45;8486058042542249863&#45;&gt;8928093050461230673</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" stroke-width=\"1\" d=\"M782.39,-542.41C796.01,-533.31 811.29,-520.99 821.36,-506.47 840.42,-478.97 838.18,-467.53 843.36,-434.47 868.51,-273.74 917.55,-175.88 792.36,-72 753.85,-40.05 425.18,-25.67 283.22,-20.91\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" stroke-width=\"1\" points=\"283.03,-17.4 272.92,-20.57 282.8,-24.4 283.03,-17.4\"/>\n",
       "</g>\n",
       "<!-- 5171068905532438498&#45;&gt;@@endnode -->\n",
       "<g id=\"edge13\" class=\"edge\">\n",
       "<title>5171068905532438498&#45;&gt;@@endnode</title>\n",
       "<path fill=\"none\" stroke=\"red\" d=\"M324.31,-335.77C209.74,-319.02 -18.95,-273.25 62.36,-182.47 72.52,-171.12 520.1,-128.51 668.85,-114.63\"/>\n",
       "<polygon fill=\"red\" stroke=\"red\" points=\"669.41,-118.09 679.04,-113.68 668.76,-111.12 669.41,-118.09\"/>\n",
       "</g>\n",
       "<!-- 5171068905532438498&#45;&gt;30601589414796702 -->\n",
       "<g id=\"edge12\" class=\"edge\">\n",
       "<title>5171068905532438498&#45;&gt;30601589414796702</title>\n",
       "<path fill=\"none\" stroke=\"black\" stroke-width=\"1\" d=\"M446.5,-349.01C516.34,-354.48 624.21,-367.77 649.36,-398.47 663.45,-415.68 658.67,-441.45 651.71,-460.83\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" stroke-width=\"1\" points=\"648.38,-459.73 647.96,-470.31 654.89,-462.3 648.38,-459.73\"/>\n",
       "</g>\n",
       "<!-- 5171068905532438498&#45;&gt;8928093050461230673 -->\n",
       "<g id=\"edge11\" class=\"edge\">\n",
       "<title>5171068905532438498&#45;&gt;8928093050461230673</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" stroke-width=\"1\" d=\"M324.23,-341.42C239.27,-337.25 91.9,-325.05 53.36,-290.47 -18.94,-225.6 -14.5,-146.89 47.36,-72 72.85,-41.13 116.64,-28.09 153.59,-22.65\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" stroke-width=\"1\" points=\"154.36,-26.08 163.82,-21.31 153.45,-19.14 154.36,-26.08\"/>\n",
       "</g>\n",
       "<!-- &#45;4902265812805711147 -->\n",
       "<g id=\"node8\" class=\"node\">\n",
       "<title>&#45;4902265812805711147</title>\n",
       "<polygon fill=\"#ffffff\" stroke=\"black\" points=\"640.86,-434.47 449.86,-434.47 449.86,-398.47 640.86,-398.47 640.86,-434.47\"/>\n",
       "<text text-anchor=\"middle\" x=\"545.36\" y=\"-413.37\" font-family=\"Times,serif\" font-size=\"12.00\">Create Purchase Order Item </text>\n",
       "</g>\n",
       "<!-- 5171068905532438498&#45;&gt;&#45;4902265812805711147 -->\n",
       "<g id=\"edge9\" class=\"edge\">\n",
       "<title>5171068905532438498&#45;&gt;&#45;4902265812805711147</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" stroke-width=\"1.01\" d=\"M430.26,-362.54C453.02,-372.05 480.44,-384 502.84,-394.13\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" stroke-width=\"1.01\" points=\"501.56,-397.39 512.11,-398.34 504.46,-391.02 501.56,-397.39\"/>\n",
       "</g>\n",
       "<!-- 8675162574921516744 -->\n",
       "<g id=\"node9\" class=\"node\">\n",
       "<title>8675162574921516744</title>\n",
       "<polygon fill=\"#ffffff\" stroke=\"black\" points=\"490.36,-290.47 280.36,-290.47 280.36,-254.47 490.36,-254.47 490.36,-290.47\"/>\n",
       "<text text-anchor=\"middle\" x=\"385.36\" y=\"-269.37\" font-family=\"Times,serif\" font-size=\"12.00\">Print and Send Purchase Order </text>\n",
       "</g>\n",
       "<!-- 5171068905532438498&#45;&gt;8675162574921516744 -->\n",
       "<g id=\"edge10\" class=\"edge\">\n",
       "<title>5171068905532438498&#45;&gt;8675162574921516744</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" stroke-width=\"1\" d=\"M379.44,-326.16C378.65,-318.45 378.42,-309.18 378.76,-300.58\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" stroke-width=\"1\" points=\"382.26,-300.79 379.46,-290.57 375.27,-300.3 382.26,-300.79\"/>\n",
       "</g>\n",
       "<!-- 30601589414796702&#45;&gt;@@endnode -->\n",
       "<g id=\"edge35\" class=\"edge\">\n",
       "<title>30601589414796702&#45;&gt;@@endnode</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" d=\"M666.9,-470.29C700.92,-446.69 754.36,-400.83 754.36,-345.47 754.36,-345.47 754.36,-345.47 754.36,-271.47 754.36,-230.81 742.77,-185.89 732.39,-153.81\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" points=\"735.7,-152.67 729.22,-144.28 729.06,-154.88 735.7,-152.67\"/>\n",
       "</g>\n",
       "<!-- 30601589414796702&#45;&gt;8960506394539949144 -->\n",
       "<g id=\"edge33\" class=\"edge\">\n",
       "<title>30601589414796702&#45;&gt;8960506394539949144</title>\n",
       "<path fill=\"none\" stroke=\"black\" stroke-width=\"2.33\" d=\"M650.41,-506.52C657.62,-524.68 666.19,-554.1 676.36,-578.47 682.26,-592.61 690.07,-607.74 696.11,-620.15\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" stroke-width=\"2.33\" points=\"693.07,-621.9 700.5,-629.45 699.4,-618.91 693.07,-621.9\"/>\n",
       "</g>\n",
       "<!-- 30601589414796702&#45;&gt;&#45;4902265812805711147 -->\n",
       "<g id=\"edge34\" class=\"edge\">\n",
       "<title>30601589414796702&#45;&gt;&#45;4902265812805711147</title>\n",
       "<path fill=\"none\" stroke=\"black\" stroke-width=\"1.16\" d=\"M616.12,-470.16C604.17,-461.26 589.43,-450.29 576.51,-440.67\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.16\" points=\"578.44,-437.74 568.33,-434.57 574.26,-443.35 578.44,-437.74\"/>\n",
       "</g>\n",
       "<!-- 8928093050461230673&#45;&gt;8960506394539949144 -->\n",
       "<g id=\"edge28\" class=\"edge\">\n",
       "<title>8928093050461230673&#45;&gt;8960506394539949144</title>\n",
       "<path fill=\"none\" stroke=\"black\" stroke-width=\"1.17\" d=\"M272.9,-18.43C405.09,-17.88 738.88,-21.66 836.36,-72 902.33,-106.07 944.36,-125.22 944.36,-199.47 944.36,-489.47 944.36,-489.47 944.36,-489.47 944.36,-575.95 834.16,-617.37 762.8,-635.12\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" stroke-width=\"1.17\" points=\"761.91,-631.74 753,-637.47 763.54,-638.54 761.91,-631.74\"/>\n",
       "</g>\n",
       "<!-- 8928093050461230673&#45;&gt;5171068905532438498 -->\n",
       "<g id=\"edge29\" class=\"edge\">\n",
       "<title>8928093050461230673&#45;&gt;5171068905532438498</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" d=\"M163.71,-23.53C130.29,-29.44 89.57,-42.68 65.36,-72 3.5,-146.89 -0.94,-225.6 71.36,-290.47 106.6,-322.08 232.8,-335 314.14,-340.16\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" points=\"314.13,-343.66 324.32,-340.78 314.55,-336.68 314.13,-343.66\"/>\n",
       "</g>\n",
       "<!-- 8928093050461230673&#45;&gt;30601589414796702 -->\n",
       "<g id=\"edge30\" class=\"edge\">\n",
       "<title>8928093050461230673&#45;&gt;30601589414796702</title>\n",
       "<path fill=\"none\" stroke=\"black\" stroke-width=\"2.33\" d=\"M273.02,-20.76C403.7,-25.48 726.01,-40.23 762.36,-72 806.17,-110.31 792.36,-141.27 792.36,-199.47 792.36,-345.47 792.36,-345.47 792.36,-345.47 792.36,-402.6 734.34,-443.21 689.76,-465.99\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" stroke-width=\"2.33\" points=\"688.17,-462.87 680.76,-470.44 691.28,-469.14 688.17,-462.87\"/>\n",
       "</g>\n",
       "<!-- &#45;4902265812805711147&#45;&gt;5171068905532438498 -->\n",
       "<g id=\"edge14\" class=\"edge\">\n",
       "<title>&#45;4902265812805711147&#45;&gt;5171068905532438498</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" stroke-width=\"1\" d=\"M500.32,-398.34C477.55,-388.82 450.13,-376.87 427.74,-366.75\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" stroke-width=\"1\" points=\"429.03,-363.49 418.48,-362.54 426.13,-369.87 429.03,-363.49\"/>\n",
       "</g>\n",
       "<!-- &#45;4902265812805711147&#45;&gt;8675162574921516744 -->\n",
       "<g id=\"edge15\" class=\"edge\">\n",
       "<title>&#45;4902265812805711147&#45;&gt;8675162574921516744</title>\n",
       "<path fill=\"none\" stroke=\"black\" stroke-width=\"2.6\" d=\"M529.39,-398.39C511.87,-379.96 482.59,-350.07 455.36,-326.47 443.47,-316.17 429.79,-305.56 417.7,-296.57\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" stroke-width=\"2.6\" points=\"419.75,-293.73 409.62,-290.62 415.6,-299.37 419.75,-293.73\"/>\n",
       "</g>\n",
       "<!-- 8941812083731042042 -->\n",
       "<g id=\"node10\" class=\"node\">\n",
       "<title>8941812083731042042</title>\n",
       "<polygon fill=\"#a6faa5\" stroke=\"black\" points=\"725.86,-290.47 534.86,-290.47 534.86,-254.47 725.86,-254.47 725.86,-290.47\"/>\n",
       "<text text-anchor=\"middle\" x=\"630.36\" y=\"-269.37\" font-family=\"Times,serif\" font-size=\"12.00\">Refuse Purchase Order Item </text>\n",
       "</g>\n",
       "<!-- &#45;4902265812805711147&#45;&gt;8941812083731042042 -->\n",
       "<g id=\"edge16\" class=\"edge\">\n",
       "<title>&#45;4902265812805711147&#45;&gt;8941812083731042042</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" stroke-width=\"1.05\" d=\"M555.61,-398.34C570.35,-373.71 597.65,-328.11 614.86,-299.35\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" stroke-width=\"1.05\" points=\"617.93,-301.04 620.07,-290.66 611.93,-297.44 617.93,-301.04\"/>\n",
       "</g>\n",
       "<!-- 8675162574921516744&#45;&gt;6761698098749337524 -->\n",
       "<g id=\"edge21\" class=\"edge\">\n",
       "<title>8675162574921516744&#45;&gt;6761698098749337524</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" stroke-width=\"1.05\" d=\"M386.1,-254.16C386.43,-246.45 386.83,-237.18 387.19,-228.58\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" stroke-width=\"1.05\" points=\"390.69,-228.71 387.62,-218.57 383.7,-228.41 390.69,-228.71\"/>\n",
       "</g>\n",
       "<!-- 8675162574921516744&#45;&gt;&#45;8486058042542249863 -->\n",
       "<g id=\"edge22\" class=\"edge\">\n",
       "<title>8675162574921516744&#45;&gt;&#45;8486058042542249863</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" stroke-width=\"1\" d=\"M456.5,-290.51C518.73,-308.49 608.29,-342.19 668.36,-398.47 708.56,-436.14 733.02,-497.4 744.49,-532.49\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" stroke-width=\"1\" points=\"741.17,-533.59 747.51,-542.07 747.84,-531.48 741.17,-533.59\"/>\n",
       "</g>\n",
       "<!-- 8675162574921516744&#45;&gt;5171068905532438498 -->\n",
       "<g id=\"edge23\" class=\"edge\">\n",
       "<title>8675162574921516744&#45;&gt;5171068905532438498</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" stroke-width=\"1\" d=\"M391.25,-290.57C392.06,-298.26 392.29,-307.52 391.96,-316.13\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" stroke-width=\"1\" points=\"388.47,-315.95 391.27,-326.16 395.45,-316.43 388.47,-315.95\"/>\n",
       "</g>\n",
       "<!-- 8675162574921516744&#45;&gt;8928093050461230673 -->\n",
       "<g id=\"edge26\" class=\"edge\">\n",
       "<title>8675162574921516744&#45;&gt;8928093050461230673</title>\n",
       "<path fill=\"none\" stroke=\"black\" stroke-width=\"2.38\" d=\"M280.1,-268.49C196.81,-263.65 90.04,-251.06 62.36,-218.47 27.52,-177.45 70.33,-116.56 113.36,-72 125.98,-58.92 142.53,-48.53 158.74,-40.54\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" stroke-width=\"2.38\" points=\"160.63,-43.52 168.21,-36.11 157.67,-37.18 160.63,-43.52\"/>\n",
       "</g>\n",
       "<!-- 5488738468185313816 -->\n",
       "<g id=\"node12\" class=\"node\">\n",
       "<title>5488738468185313816</title>\n",
       "<polygon fill=\"#a6faa5\" stroke=\"black\" points=\"687.86,-218.47 498.86,-218.47 498.86,-182.47 687.86,-182.47 687.86,-218.47\"/>\n",
       "<text text-anchor=\"middle\" x=\"593.36\" y=\"-197.37\" font-family=\"Times,serif\" font-size=\"12.00\">Delete Purchase Order Item </text>\n",
       "</g>\n",
       "<!-- 8675162574921516744&#45;&gt;5488738468185313816 -->\n",
       "<g id=\"edge24\" class=\"edge\">\n",
       "<title>8675162574921516744&#45;&gt;5488738468185313816</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" stroke-width=\"1.05\" d=\"M435.97,-254.43C465.16,-244.61 502.05,-232.2 532.77,-221.86\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" stroke-width=\"1.05\" points=\"534.15,-225.09 542.51,-218.58 531.92,-218.45 534.15,-225.09\"/>\n",
       "</g>\n",
       "<!-- &#45;6712442493952616950 -->\n",
       "<g id=\"node13\" class=\"node\">\n",
       "<title>&#45;6712442493952616950</title>\n",
       "<polygon fill=\"#a6faa5\" stroke=\"black\" points=\"240.86,-218.47 71.86,-218.47 71.86,-182.47 240.86,-182.47 240.86,-218.47\"/>\n",
       "<text text-anchor=\"middle\" x=\"156.36\" y=\"-197.37\" font-family=\"Times,serif\" font-size=\"12.00\">Dun Order Confirmation </text>\n",
       "</g>\n",
       "<!-- 8675162574921516744&#45;&gt;&#45;6712442493952616950 -->\n",
       "<g id=\"edge25\" class=\"edge\">\n",
       "<title>8675162574921516744&#45;&gt;&#45;6712442493952616950</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" stroke-width=\"1.02\" d=\"M329.63,-254.43C297.22,-244.53 256.18,-231.98 222.18,-221.59\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" stroke-width=\"1.02\" points=\"222.92,-218.16 212.33,-218.58 220.87,-224.85 222.92,-218.16\"/>\n",
       "</g>\n",
       "<!-- &#45;226880188309400592 -->\n",
       "<g id=\"node14\" class=\"node\">\n",
       "<title>&#45;226880188309400592</title>\n",
       "<polygon fill=\"#a6faa5\" stroke=\"black\" points=\"313.86,-127.23 122.86,-127.23 122.86,-91.23 313.86,-91.23 313.86,-127.23\"/>\n",
       "<text text-anchor=\"middle\" x=\"218.36\" y=\"-106.13\" font-family=\"Times,serif\" font-size=\"12.00\">Receive Order Confirmation </text>\n",
       "</g>\n",
       "<!-- 8675162574921516744&#45;&gt;&#45;226880188309400592 -->\n",
       "<g id=\"edge27\" class=\"edge\">\n",
       "<title>8675162574921516744&#45;&gt;&#45;226880188309400592</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" stroke-width=\"1.1\" d=\"M342.27,-254.4C323.64,-245.58 302.47,-233.5 286.36,-218.47 261.26,-195.05 241.66,-160.42 230.08,-136.67\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" stroke-width=\"1.1\" points=\"233.2,-135.07 225.76,-127.53 226.87,-138.07 233.2,-135.07\"/>\n",
       "</g>\n",
       "<!-- 8941812083731042042&#45;&gt;@@endnode -->\n",
       "<g id=\"edge32\" class=\"edge\">\n",
       "<title>8941812083731042042&#45;&gt;@@endnode</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" d=\"M660.14,-254.38C673.24,-245.36 687.61,-233.1 696.36,-218.47 707.37,-200.03 712.57,-176.91 714.94,-156.79\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" points=\"718.44,-156.87 715.93,-146.57 711.48,-156.19 718.44,-156.87\"/>\n",
       "</g>\n",
       "<!-- 5461341578038645154 -->\n",
       "<g id=\"node11\" class=\"node\">\n",
       "<title>5461341578038645154</title>\n",
       "<polygon fill=\"#ffffff\" stroke=\"black\" points=\"487.86,-506.47 264.86,-506.47 264.86,-470.47 487.86,-470.47 487.86,-506.47\"/>\n",
       "<text text-anchor=\"middle\" x=\"376.36\" y=\"-485.37\" font-family=\"Times,serif\" font-size=\"12.00\">Create Purchase Requisition Item </text>\n",
       "</g>\n",
       "<!-- 5461341578038645154&#45;&gt;5171068905532438498 -->\n",
       "<g id=\"edge17\" class=\"edge\">\n",
       "<title>5461341578038645154&#45;&gt;5171068905532438498</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" stroke-width=\"1\" d=\"M377.44,-470.34C378.98,-446.14 381.79,-401.68 383.62,-372.86\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" stroke-width=\"1\" points=\"387.13,-372.86 384.27,-362.66 380.14,-372.42 387.13,-372.86\"/>\n",
       "</g>\n",
       "<!-- 5461341578038645154&#45;&gt;&#45;4902265812805711147 -->\n",
       "<g id=\"edge18\" class=\"edge\">\n",
       "<title>5461341578038645154&#45;&gt;&#45;4902265812805711147</title>\n",
       "<path fill=\"none\" stroke=\"black\" stroke-width=\"2.18\" d=\"M417.7,-470.34C440.9,-460.73 470.05,-448.66 494.63,-438.48\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" stroke-width=\"2.18\" points=\"496.25,-441.6 504.15,-434.54 493.57,-435.13 496.25,-441.6\"/>\n",
       "</g>\n",
       "<!-- 5488738468185313816&#45;&gt;@@endnode -->\n",
       "<g id=\"edge19\" class=\"edge\">\n",
       "<title>5488738468185313816&#45;&gt;@@endnode</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" d=\"M617.07,-182.26C634.42,-169.68 658.32,-152.34 678.32,-137.83\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" points=\"680.58,-140.51 686.62,-131.81 676.47,-134.85 680.58,-140.51\"/>\n",
       "</g>\n",
       "<!-- &#45;6712442493952616950&#45;&gt;&#45;226880188309400592 -->\n",
       "<g id=\"edge20\" class=\"edge\">\n",
       "<title>&#45;6712442493952616950&#45;&gt;&#45;226880188309400592</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" stroke-width=\"1.02\" d=\"M168.31,-182.26C177.49,-169.05 190.3,-150.61 200.67,-135.7\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" stroke-width=\"1.02\" points=\"203.61,-137.6 206.44,-127.39 197.86,-133.6 203.61,-137.6\"/>\n",
       "</g>\n",
       "<!-- &#45;226880188309400592&#45;&gt;8928093050461230673 -->\n",
       "<g id=\"edge31\" class=\"edge\">\n",
       "<title>&#45;226880188309400592&#45;&gt;8928093050461230673</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" stroke-width=\"1.12\" d=\"M218.36,-91.03C218.36,-78.44 218.36,-61.09 218.36,-46.57\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" stroke-width=\"1.12\" points=\"221.86,-46.15 218.36,-36.15 214.86,-46.15 221.86,-46.15\"/>\n",
       "</g>\n",
       "<!-- @@startnode -->\n",
       "<g id=\"node15\" class=\"node\">\n",
       "<title>@@startnode</title>\n",
       "<ellipse fill=\"none\" stroke=\"black\" cx=\"554.36\" cy=\"-647.7\" rx=\"33.47\" ry=\"33.47\"/>\n",
       "<text text-anchor=\"start\" x=\"538.86\" y=\"-639\" font-family=\"Times,serif\" font-size=\"34.00\">●</text>\n",
       "</g>\n",
       "<!-- @@startnode&#45;&gt;&#45;8486058042542249863 -->\n",
       "<g id=\"edge36\" class=\"edge\">\n",
       "<title>@@startnode&#45;&gt;&#45;8486058042542249863</title>\n",
       "<path fill=\"none\" stroke=\"red\" d=\"M584.86,-633.57C616.33,-620.03 665.9,-598.68 702.97,-582.73\"/>\n",
       "<polygon fill=\"red\" stroke=\"red\" points=\"704.78,-585.76 712.58,-578.59 702.01,-579.33 704.78,-585.76\"/>\n",
       "</g>\n",
       "<!-- @@startnode&#45;&gt;5171068905532438498 -->\n",
       "<g id=\"edge37\" class=\"edge\">\n",
       "<title>@@startnode&#45;&gt;5171068905532438498</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M521.24,-642.61C456.69,-632.64 315.17,-600.59 255.36,-506.47 221.64,-453.41 294.76,-397.66 344.41,-367.69\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"346.24,-370.67 353.08,-362.58 342.69,-364.65 346.24,-370.67\"/>\n",
       "</g>\n",
       "<!-- @@startnode&#45;&gt;30601589414796702 -->\n",
       "<g id=\"edge40\" class=\"edge\">\n",
       "<title>@@startnode&#45;&gt;30601589414796702</title>\n",
       "<path fill=\"none\" stroke=\"#3b823b\" d=\"M569.75,-618.23C585.57,-588.97 609.98,-543.81 625.3,-515.48\"/>\n",
       "<polygon fill=\"#3b823b\" stroke=\"#3b823b\" points=\"628.44,-517.03 630.11,-506.57 622.28,-513.7 628.44,-517.03\"/>\n",
       "</g>\n",
       "<!-- @@startnode&#45;&gt;&#45;4902265812805711147 -->\n",
       "<g id=\"edge38\" class=\"edge\">\n",
       "<title>@@startnode&#45;&gt;&#45;4902265812805711147</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M553.09,-614.34C551.3,-568.93 548.09,-487.1 546.42,-444.66\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"549.92,-444.38 546.03,-434.52 542.92,-444.65 549.92,-444.38\"/>\n",
       "</g>\n",
       "<!-- @@startnode&#45;&gt;5461341578038645154 -->\n",
       "<g id=\"edge39\" class=\"edge\">\n",
       "<title>@@startnode&#45;&gt;5461341578038645154</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M529.61,-624.84C496.44,-595.54 437.79,-543.74 403.47,-513.42\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"405.52,-510.56 395.71,-506.56 400.89,-515.8 405.52,-510.56\"/>\n",
       "</g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "<graphviz.sources.Source at 0x7f7e7eac11e0>"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "vc = VariantsCompare(xes_log, good, bad, variants_id_key='variant_id')\n",
    "gviz = vc.get_dfg_minus_best_worst()\n",
    "gviz"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "nbsphinx": "hidden"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'figures/bpi-eg-vc.pdf'"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gviz.render(filename='figures/bpi-eg-vc', format='pdf')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": ".venv_partial_ranker",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
